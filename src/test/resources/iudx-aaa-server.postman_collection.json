{
	"info": {
		"_postman_id": "7c492d9a-51d3-4546-8d25-9c4445708012",
		"name": "iudx-aaa-server",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Token",
			"item": [
				{
					"name": "Create Token",
					"item": [
						{
							"name": "create Token- clientId [200]",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Check response header\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Check response body\", function () {    \r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body).to.have.property(\"type\", \"urn:dx:as:Success\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "clientId",
										"value": "{{clientId}}",
										"type": "text",
										"description": "Use Authorization header or clientId or clientSecret"
									},
									{
										"key": "clientSecret",
										"value": "{{clientSecret}}",
										"type": "text",
										"description": "Use Authorization header or clientId or clientSecret"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"itemId\": \"example.com/79e7bfa62fad6c765bac69154c2f24c94c95220a/resource-group\",\r\n    \"itemType\": \"resource_group\",\r\n    \"role\": \"consumer\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}:{{port}}{{base}}/token",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{base}}",
									"path": [
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "create Token- token [200]",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Check response header\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Check response body\", function () {    \r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body).to.have.property(\"type\", \"urn:dx:as:Success\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "clientId",
										"value": "{{clientId}}",
										"type": "text",
										"description": "Use Authorization header or clientId or clientSecret",
										"disabled": true
									},
									{
										"key": "clientSecret",
										"value": "{{clientSecret}}",
										"type": "text",
										"description": "Use Authorization header or clientId or clientSecret",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"itemId\": \"example.com/79e7bfa62fad6c765bac69154c2f24c94c95220a/resource-group\",\r\n    \"itemType\": \"resource_group\",\r\n    \"role\": \"admin\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}:{{port}}{{base}}/token",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{base}}",
									"path": [
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "create Token-MissingToken [401]",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Check response header\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Check response body\", function () {    \r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body).to.have.property(\"type\", \"urn:dx:as:MissingAuthenticationToken\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "clientId",
										"value": "{{clientId}}",
										"type": "text",
										"description": "Use Authorization header or clientId or clientSecret",
										"disabled": true
									},
									{
										"key": "clientSecret",
										"value": "{{clientSecret}}",
										"type": "text",
										"description": "Use Authorization header or clientId or clientSecret",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"itemId\": \"example.com/79e7bfa62fad6c765bac69154c2f24c94c95220a/resource-group\",\r\n    \"itemType\": \"resource_group\",\r\n    \"role\": \"consumer\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}:{{port}}{{base}}/token",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{base}}",
									"path": [
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "create Token-MissingClientId [401]",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Check response header\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Check response body\", function () {    \r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body).to.have.property(\"type\", \"urn:dx:as:MissingAuthenticationToken\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "clientId",
										"value": "{{clientId}}",
										"type": "text",
										"description": "Use Authorization header or clientId or clientSecret",
										"disabled": true
									},
									{
										"key": "clientSecret",
										"value": "{{clientSecret}}",
										"type": "text",
										"description": "Use Authorization header or clientId or clientSecret",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"itemId\": \"example.com/79e7bfa62fad6c765bac69154c2f24c94c95220a/resource-group\",\r\n    \"itemType\": \"resource_group\",\r\n    \"role\": \"consumer\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}:{{port}}{{base}}/token",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{base}}",
									"path": [
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "create Token- InvalidRole [400]",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Check response header\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Check response body\", function () {    \r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body).to.have.property(\"type\", \"urn:dx:as:InvalidRole\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "clientId",
										"value": "{{clientId}}",
										"type": "text",
										"description": "Use Authorization header or clientId or clientSecret"
									},
									{
										"key": "clientSecret",
										"value": "{{clientSecret}}",
										"type": "text",
										"description": "Use Authorization header or clientId or clientSecret"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"itemId\": \"example.com/79e7bfa62fad6c765bac69154c2f24c94c95220a/resource-group\",\r\n    \"itemType\": \"resource_group\",\r\n    \"role\": \"admin\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}:{{port}}{{base}}/token",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{base}}",
									"path": [
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "create Token- InvalidItemType [400]",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Check response header\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Check response body\", function () {    \r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body).to.have.property(\"type\", \"urn:dx:as:InvalidInput\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "clientId",
										"value": "{{clientId}}",
										"type": "text",
										"description": "Use Authorization header or clientId or clientSecret"
									},
									{
										"key": "clientSecret",
										"value": "{{clientSecret}}",
										"type": "text",
										"description": "Use Authorization header or clientId or clientSecret"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"itemId\": \"example.com/79e7bfa62fad6c765bac69154c2f24c94c95220a/resource-group\",\r\n    \"itemType\": \"resource_group11\",\r\n    \"role\": \"consumer\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}:{{port}}{{base}}/token",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{base}}",
									"path": [
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "create Token- InvalidItemID [400] Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Check response header\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Check response body\", function () {    \r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body).to.have.property(\"type\", \"urn:dx:as:InvalidInput\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "clientId",
										"value": "{{clientId}}",
										"type": "text",
										"description": "Use Authorization header or clientId or clientSecret"
									},
									{
										"key": "clientSecret",
										"value": "{{clientSecret}}",
										"type": "text",
										"description": "Use Authorization header or clientId or clientSecret"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"itemId\": \"example.com/79e7bfa62fad6c765bac69154c2f24c94c95220a/resource-group1\",\r\n    \"itemType\": \"resource_group\",\r\n    \"role\": \"consumer\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}:{{port}}{{base}}/token",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{base}}",
									"path": [
										"token"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Introspect Token",
					"item": [
						{
							"name": "Introspect Token [200]",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Check response header\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Check response body\", function () {    \r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body).to.have.property(\"type\", \"urn:dx:as:Success\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"accessToken\": \"{{tip_jwt}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}:{{port}}{{base}}/introspect",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{base}}",
									"path": [
										"introspect"
									]
								}
							},
							"response": []
						},
						{
							"name": "Introspect Token- Expired [401]",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Check response header\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Check response body\", function () {    \r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body).to.have.property(\"type\", \"urn:dx:as:InvalidAuthenticationToken\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"accessToken\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NiJ9.eyJzdWIiOiIzNDliNGI1NS0wMjUxLTQ5MGUtYmVlOS0wMGYzYTVkM2U2NDMiLCJpc3MiOiJhdXRoLnRlc3QuY29tIiwiYXVkIjoidGVzdC5jYXQuY29tIiwiZXhwIjoxNjIzOTA1MTY2LCJuYmYiOjE2MjM5MDQ1NjYsImlhdCI6MTYyMzkwNDU2NiwianRpIjoiYTcyODQ4MGYtOGQwZS00OTgyLTg3NWYtNmFhMzgzMjY1MzE2IiwiaXRlbV9pZCI6Iml0ZW0tMSIsIml0ZW1fdHlwZSI6IlJlc291cmNlR3JvdXAiLCJyb2xlIjoicHJvdmlkZXIiLCJjb25zdHJhaW50cyI6e319.YsRL87QZ68m-A1ALhAA2IdhM6BgxMjfeQxCRhf9Q2pajtFtuJGYCbcCd71xswXIRM4L7WS05vznevd5JdxKkvQ\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}:{{port}}{{base}}/introspect",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{base}}",
									"path": [
										"introspect"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Revoke Token",
					"item": [
						{
							"name": "Revoke Token- ClientId [200]",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Check response header\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Check response body\", function () {    \r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body).to.have.property(\"type\", \"urn:dx:as:Success\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "clientId",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "clientSecret",
										"value": "{{clientSecret}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"clientId\" :\"349b4b55-0251-490e-bee9-00f3a5d3e643\",\r\n    \"rsUrl\" :\"foobar.iudx.io\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}:{{port}}{{base}}/token/revoke",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{base}}",
									"path": [
										"token",
										"revoke"
									]
								}
							},
							"response": []
						},
						{
							"name": "Revoke Token- token [200]",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Check response header\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Check response body\", function () {    \r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body).to.have.property(\"type\", \"urn:dx:as:Success\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"clientId\" :\"349b4b55-0251-490e-bee9-00f3a5d3e643\",\r\n    \"rsUrl\" :\"foobar.iudx.io\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}:{{port}}{{base}}/token/revoke",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{base}}",
									"path": [
										"token",
										"revoke"
									]
								}
							},
							"response": []
						},
						{
							"name": "Revoke Token- InvalidRsUrl [400]",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Check response header\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Check response body\", function () {    \r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body).to.have.property(\"type\", \"urn:dx:as:InvalidInput\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "clientId",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "clientSecret",
										"value": "{{clientSecret}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"clientId\" :\"349b4b55-0251-490e-bee9-00f3a5d3e643\",\r\n    \"rsUrl\" :\"foobar.iudx.in\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}:{{port}}{{base}}/token/revoke",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{base}}",
									"path": [
										"token",
										"revoke"
									]
								}
							},
							"response": []
						},
						{
							"name": "Revoke Token- InvalidClientId [400]",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Check response header\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\",\"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Check response body\", function () {    \r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body).to.have.property(\"type\", \"urn:dx:as:InvalidInput\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "clientId",
										"value": "{{clientId}}",
										"type": "text"
									},
									{
										"key": "clientSecret",
										"value": "{{clientSecret}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"clientId\" :\"349b4b55-0251-490e-bee9-00f3a5d3e633\",\r\n    \"rsUrl\" :\"foobar.iudx.io\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}:{{port}}{{base}}/token/revoke",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{base}}",
									"path": [
										"token",
										"revoke"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get KeyCloak Token [To set the ENV token]",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "accessTokenUrl",
									"value": "https://{{keycloackEndpoint}}/auth/realms/{{keycloackRealm}}/protocol/openid-connect/token",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://{{keycloackEndpoint}}/auth/realms/{{keycloackRealm}}/protocol/openid-connect/auth",
									"type": "string"
								},
								{
									"key": "redirect_uri",
									"value": "https://{{keycloackEndpoint}}/auth/realms/{{keycloackRealm}}/account/callback",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "",
									"type": "string"
								},
								{
									"key": "accessToken",
									"value": "",
									"type": "string"
								},
								{
									"key": "tokenName",
									"value": "Token",
									"type": "string"
								},
								{
									"key": "useBrowser",
									"value": false,
									"type": "boolean"
								},
								{
									"key": "scope",
									"value": "email",
									"type": "string"
								},
								{
									"key": "state",
									"value": "12345678",
									"type": "string"
								},
								{
									"key": "clientSecret",
									"value": "",
									"type": "string"
								},
								{
									"key": "clientId",
									"value": "account",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{provider_password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{provider_username}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						},
						"description": "This API will Generate KeyCloack JWT.\nThe JWT will be used to generate token from iudx-aaa-server."
					},
					"response": []
				}
			]
		}
	]
}