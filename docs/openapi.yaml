openapi: 3.0.0
info:
  title: IUDX-AAA-Server
  version: '1.0'
  description: 'API specification for IUDX AAA Server. These APIs are used by users manage tokens, policy etc. These APIs requires valid token or client details for authentication.'
  license:
    name: MIT
  contact:
    name: Md Adil
    email: md.adil@datakaveir.org
servers:
  - url: 'http://localhost:3000'
paths:
  /auth/v1/token:
    parameters: []
    post:
      summary: Create Token
      operationId: post-auth-v1-token
      responses:
        '200':
          description: Token has been successfully generated upon requed validation and authentication.
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  type:
                    type: string
                    minLength: 1
                  title:
                    type: string
                    minLength: 1
                  results:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - accessToken
                        - expiry
                        - server
                      properties:
                        accessToken:
                          type: string
                          minLength: 1
                        expiry:
                          type: number
                        server:
                          type: string
                          minLength: 1
                required:
                  - type
                  - title
                  - results
              examples:
                General Structure:
                  value:
                    type: 'urn:dx:as:Success'
                    title: Token created
                    results:
                      - accessToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NiJ9.eyJzdWIiOiIzNDliNGI1NS0wMjUxLTQ5MGUtYmVlOS0wMGYzYTVkM2U2NDMiLCJpc3MiOiJhdXRoLnRlc3QuY29tIiwiYXVkIjoiZm9vYmFyLml1ZHguaW8iLCJleHAiOjE2MjY4MzY3ODQsImlhdCI6MTYyNjc5MzU4NCwiaWlkIjoicmc6ZXhhbXBsZS5jb20vNzllN2JmYTYyZmFkNmM3NjViYWM2OTE1NGMyZjI0Yzk0Yzk1MjIwYS9yZXNvdXJjZS1ncm91cCIsInJvbGUiOiJjb25zdW1lciIsImNvbnMiOnt9fQ.eAWKamrRdV4c1MPuoLU6j0bWB6iiM_of5F3LA-_DZGhyu_6aFP4cmCI1Y3ZN2ZRklOSGcrL5aHC8Ccga6dtTrg
                        expiry: 1626836784
                        server: foobar.iudx.io
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
        '400':
          description: Generally for missing or invalid payload details.
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  type:
                    type: string
                    minLength: 1
                  title:
                    type: string
                    minLength: 1
                  detail:
                    type: string
                    minLength: 1
                required:
                  - type
                  - title
                  - detail
              examples:
                Invalid Role:
                  value:
                    type: 'urn:dx:as:InvalidRole'
                    title: Role not defined
                    detail: Role not defined
        '401':
          description: No authentication details in the header. Missing token or clientId & clientSecret.
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  type:
                    type: string
                    minLength: 1
                  title:
                    type: string
                    minLength: 1
                  detail:
                    type: string
                    minLength: 1
                required:
                  - type
                  - title
                  - detail
              examples:
                Missing Authentication Details:
                  value:
                    type: 'urn:dx:as:MissingAuthenticationToken'
                    title: Missing auth details
                    detail: Missing auth details
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
      parameters:
        - schema:
            type: string
            minLength: 1
            maxLength: 1500
            example: Bearer <JWT>
          in: header
          name: Authorization
          description: Keycloak Issued token
        - schema:
            type: string
            format: uuid
            minLength: 36
            maxLength: 36
            pattern: '^[0-9a-f]{8}\b-[0-9a-f]{4}\b-[0-9a-f]{4}\b-[0-9a-f]{4}\b-[0-9a-f]{12}$'
          in: header
          name: clientId
          description: Keycloak Issued clientId
        - schema:
            type: string
            format: uuid
            maxLength: 36
            pattern: '^[0-9a-f]{8}\b-[0-9a-f]{4}\b-[0-9a-f]{4}\b-[0-9a-f]{4}\b-[0-9a-f]{12}$'
            minLength: 36
          in: header
          description: Keycloak Issued clientSecret
          name: clientSecret
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                itemId:
                  type: string
                  minLength: 1
                itemType:
                  type: string
                  minLength: 1
                  enum:
                    - resource_server
                    - resource
                    - resource_group
                role:
                  type: string
                  maxLength: 10
                  minLength: 5
                  enum:
                    - provider
                    - delegate
                    - consumer
                    - admin
              required:
                - itemId
                - itemType
            examples:
              Body for resourceGroup:
                value:
                  itemId: example.com/8d4b20ec4bf21efb363e72671e1b5bd77fd6cf91/resource-group
                  itemType: resource_group
                  role: admin
              Body for Open Resources:
                value:
                  itemId: example.com/8d4b20ec4bf21efb363e72671e1b5bd77fd6cf91/<rs.url>
                  itemType: resource_server
                  role: admin
        description: ''
      description: Request for a JWT (token). One can generate token using either by providing token header or providing clientId/clientSecret in the header.
      tags:
        - Token APIs
  /auth/v1/introspect:
    post:
      summary: Introspect Token
      operationId: post-auth-v1-introspect
      responses:
        '200':
          description: Token validated.
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  type:
                    type: string
                    minLength: 1
                  title:
                    type: string
                    minLength: 1
                  results:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      type: object
                      properties:
                        sub:
                          type: string
                          minLength: 1
                        iss:
                          type: string
                          minLength: 1
                        aud:
                          type: string
                          minLength: 1
                        exp:
                          type: number
                        iat:
                          type: number
                        iid:
                          type: string
                          minLength: 1
                        role:
                          type: string
                          minLength: 1
                        cons:
                          type: object
                      required:
                        - sub
                        - iss
                        - aud
                        - exp
                        - iat
                        - iid
                        - role
                        - cons
                required:
                  - type
                  - title
                  - results
              examples:
                Introspect Token:
                  value:
                    type: 'urn:dx:as:Success'
                    title: Token authenticated
                    results:
                      - sub: 129b4b55-0251-490e-bee9-00f3a5d3e632
                        iss: auth.test.com
                        aud: foobar.iudx.io
                        exp: 1626837909
                        iat: 1626794709
                        iid: 'rg:example.com/79e7bfa62fad6c765bac69154c2f24c94c95210v/resource-group'
                        role: consumer
                        cons: {}
        '400':
          description: Invalid/missing information
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  type:
                    type: string
                    minLength: 1
                  title:
                    type: string
                    minLength: 1
                  detail:
                    type: string
                    minLength: 1
                required:
                  - type
                  - title
                  - detail
              examples:
                Invalid/missing information:
                  value:
                    type: string
                    title: string
                    detail: string
        '401':
          description: Invalid/expired token information
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  type:
                    type: string
                    minLength: 1
                  title:
                    type: string
                    minLength: 1
                  results:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - status
                      properties:
                        status:
                          type: string
                          minLength: 1
                required:
                  - type
                  - title
                  - results
              examples:
                Unauthorized token:
                  value:
                    type: 'urn:dx:as:InvalidAuthenticationToken'
                    title: Token authentication failed
                    results:
                      - status: deny
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                accessToken:
                  type: string
                  minLength: 1
                  maxLength: 512
                  example: JWT
              required:
                - accessToken
            examples:
              Introspect Token:
                value:
                  accessToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NiJ9.eyJzdWIiOiJhM2U3ZTM0Yy00NGJmLTQxZmYtYWQ4Ni0yZWUwNGE5NTQ0MTgiLCJpc3MiOiJhdXRoLnRlc3QuY29tIiwiYXVkIjoiZm9vYmFyLml1ZHguaW8iLCJleHAiOjE2MjY0NzMwNDgsImlhdCI6MTYyNjQyOTg0OCwiaWlkIjoicmc6ZXhhbXBsZS5jb20vOGQ0YjIwZWM0YmYyMWVmYjM2M2U3MjY3MWUxYjViZDc3ZmQ2Y2Y5MS9yZXNvdXJjZS1ncm91cCIsInJvbGUiOiJhZG1pbiIsImNvbnMiOnt9fQ.iyQXw21_4cXixVHm45rlHpzYjDz2PfTDRORbdQz9EHlLP_mQ-oBHZaWg1IWcuuoPS4FTRgNXWwM_uLhyxTDcuw
        description: ''
      description: Introspect already generated JWT (token).
      tags:
        - Token APIs
    parameters: []
  /auth/v1/token/revoke:
    post:
      summary: Revoke Token
      operationId: post-auth-v1-revoke
      responses:
        '200':
          description: Successfully token revoke
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  type:
                    type: string
                    minLength: 1
                  title:
                    type: string
                    minLength: 1
                  results:
                    type: array
                    items: {}
                required:
                  - type
                  - title
              examples:
                Token revoked:
                  value:
                    type: 'urn:dx:as:Success'
                    title: Token revoked
                    results: []
        '400':
          description: Invalid/missing information.
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  type:
                    type: string
                    minLength: 1
                  title:
                    type: string
                    minLength: 1
                  detail:
                    type: string
                    minLength: 1
                required:
                  - type
                  - title
                  - detail
              examples:
                Bad request:
                  value:
                    type: string
                    title: string
                    detail: string
        '401':
          description: No authentication details in the header. Missing token or clientId & clientSecret.
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  type:
                    type: string
                    minLength: 1
                  title:
                    type: string
                    minLength: 1
                  detail:
                    type: string
                    minLength: 1
                required:
                  - type
                  - title
                  - detail
              examples:
                Unauthorized:
                  value:
                    type: string
                    title: string
                    detail: string
      description: Revoke the token associated with clientId. Revoke token requires either token header or clientId/clientSecret header.
      tags:
        - Token APIs
      parameters:
        - schema:
            type: string
            maxLength: 1500
            minLength: 1
            example: Bearer <JWT>
          in: header
          name: Authorization
          description: Keycloak Issued token
        - schema:
            type: string
            format: uuid
            maxLength: 36
            pattern: '^[0-9a-f]{8}\b-[0-9a-f]{4}\b-[0-9a-f]{4}\b-[0-9a-f]{4}\b-[0-9a-f]{12}$'
            minLength: 36
          in: header
          name: clientId
          description: Keycloak Issued clientId
        - schema:
            type: string
            format: uuid
            maxLength: 36
            minLength: 36
            pattern: '^[0-9a-f]{8}\b-[0-9a-f]{4}\b-[0-9a-f]{4}\b-[0-9a-f]{4}\b-[0-9a-f]{12}$'
          in: header
          name: clientSecret
          description: Keycloak Issued clientSecret
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                clientId:
                  type: string
                  minLength: 36
                  format: uuid
                  pattern: '^[0-9a-f]{8}\b-[0-9a-f]{4}\b-[0-9a-f]{4}\b-[0-9a-f]{4}\b-[0-9a-f]{12}$'
                  maxLength: 36
                rsUrl:
                  type: string
                  minLength: 1
              required:
                - clientId
                - rsUrl
            examples:
              Revoke Request:
                value:
                  clientId: 123e4567-e89b-12d3-a456-426614174000
                  rsUrl: string
    parameters: []
  /auth/v1/user/profile:
    post:
      summary: Create User Profile
      operationId: post-auth-v1-user-profile
      responses:
        '200':
          description: Profile has been successfully created.
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  type:
                    type: string
                    minLength: 1
                  title:
                    type: string
                    minLength: 1
                  results:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          minLength: 1
                        roles:
                          type: string
                          minLength: 1
                        keycloakId:
                          type: string
                          minLength: 1
                        userId:
                          type: string
                          minLength: 1
                        email:
                          type: string
                        phone:
                          type: string
                        organization:
                          type: object
                        clients:
                          type: array
                          uniqueItems: true
                          minItems: 1
                          items:
                            type: object
                            properties:
                              client:
                                type: string
                                minLength: 1
                              clientId:
                                type: string
                              clientSecret:
                                type: string
                            required:
                              - client
                              - clientId
                              - clientSecret
                      required:
                        - name
                        - roles
                        - keycloakId
                        - userId
                        - email
                        - phone
                        - organization
                required:
                  - type
                  - title
                  - results
              examples:
                example-1:
                  value:
                    type: string
                    title: string
                    results:
                      - name: string
                        roles: string
                        keycloakId: string
                        userId: string
                        email: string
                        phone: string
                        organization: {}
                        clients:
                          - client: string
                            clientId: string
                            clientSecret: string
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  type:
                    type: string
                    minLength: 1
                  title:
                    type: string
                    minLength: 1
                  detail:
                    type: string
                    minLength: 1
                required:
                  - type
                  - title
                  - detail
              examples:
                example-1:
                  value:
                    type: string
                    title: string
                    detail: string
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  type:
                    type: string
                    minLength: 1
                  title:
                    type: string
                    minLength: 1
                  detail:
                    type: string
                    minLength: 1
                required:
                  - type
                  - title
                  - detail
              examples:
                example-1:
                  value:
                    type: string
                    title: string
                    detail: string
      parameters:
        - schema:
            type: string
            maxLength: 1500
            minLength: 1
            example: Bearer <JWT>
          in: header
          name: Authorization
          description: Keycloak Issued token
        - schema:
            type: string
            format: uuid
            maxLength: 36
            pattern: '^[0-9a-f]{8}\b-[0-9a-f]{4}\b-[0-9a-f]{4}\b-[0-9a-f]{4}\b-[0-9a-f]{12}$'
            minLength: 36
          in: header
          name: clientId
          description: Keycloak Issued clientId
        - schema:
            type: string
            format: uuid
            minLength: 36
            maxLength: 36
            pattern: '^[0-9a-f]{8}\b-[0-9a-f]{4}\b-[0-9a-f]{4}\b-[0-9a-f]{4}\b-[0-9a-f]{12}$'
          in: header
          name: clientSecret
          description: Keycloak Issued clientSecret
      description: Create a profile of a new User associated with aOrganization.
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                roles:
                  type: array
                  minItems: 1
                  maxItems: 4
                  uniqueItems: true
                  items:
                    type: string
                    enum:
                      - provider
                      - consumer
                      - delegate
                      - admin
                    minLength: 5
                    maxLength: 10
                orgId:
                  type: string
                  format: uuid
                  minLength: 36
                  maxLength: 36
                  pattern: '^[0-9a-f]{8}\b-[0-9a-f]{4}\b-[0-9a-f]{4}\b-[0-9a-f]{4}\b-[0-9a-f]{12}$'
                phone:
                  type: string
                  example: '9900990099'
                  pattern: '^[9876]\d{9}$'
                  minLength: 10
                  maxLength: 10
              required:
                - roles
                - orgId
            examples:
              Create UserProfile:
                value:
                  roles:
                    - provider
                    - consumer
                    - delegate
                  orgId: 123e4567-e89b-12d3-a456-426614174000
        description: No other role is allowed along with admin role.
      tags:
        - User APIs
    get:
      summary: Get User Profile
      operationId: get-auth-v1-user-profile
      responses:
        '200':
          description: Successfully list user profile
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    type: 'urn:dx:as:Success'
                    title: User details
                    results:
                      keycloakId: 72b9f514-7992-422a-9d15-2ac75982ee93
                      name: {}
                      roles:
                        - CONSUMER
                      userId: 32a4b979-4f4a-4c44-b0c3-2fe109952b5f
                      email: alice@gmail.com
                      clients:
                        - clientName: default
                          clientId: 349b4b55-0251-490e-bee9-00f3a5d3e643
                properties:
                  type:
                    type: string
                    minLength: 1
                  title:
                    type: string
                    minLength: 1
                  results:
                    type: object
                    required:
                      - keycloakId
                      - name
                      - roles
                      - userId
                      - email
                      - clients
                    properties:
                      keycloakId:
                        type: string
                        minLength: 1
                      name:
                        type: object
                      roles:
                        type: array
                        items:
                          type: string
                      userId:
                        type: string
                        minLength: 1
                      email:
                        type: string
                        minLength: 1
                      clients:
                        type: array
                        uniqueItems: true
                        minItems: 1
                        items:
                          type: object
                          properties:
                            clientName:
                              type: string
                              minLength: 1
                            clientId:
                              type: string
                              minLength: 1
                          required:
                            - clientName
                            - clientId
                required:
                  - type
                  - title
                  - results
              examples:
                example-1:
                  value:
                    type: string
                    title: string
                    results:
                      keycloakId: string
                      name: {}
                      roles: []
                      userId: string
                      email: string
                      clients:
                        - clientName: string
                          clientId: string
                ListProfile:
                  value:
                    type: 'urn:dx:as:Success'
                    title: User details
                    results:
                      keycloakId: 72b9f514-7992-422a-9d15-2ac75982ee93
                      name: {}
                      roles:
                        - CONSUMER
                      userId: 167b4b55-0251-490e-bcc9-00f3a5d5c843
                      email: alice@gmail.com
                      clients:
                        - clientName: default
                          clientId: 167b4b55-0251-490e-bcc9-00f3a5d5c843
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  type:
                    type: string
                    minLength: 1
                  title:
                    type: string
                    minLength: 1
                  detail:
                    type: string
                    minLength: 1
                required:
                  - type
                  - title
                  - detail
                x-examples:
                  example-1:
                    type: string
                    title: string
                    detail: string
              examples:
                example-1:
                  value:
                    type: string
                    title: string
                    detail: string
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
              description: application/json
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  type:
                    type: string
                    minLength: 1
                  title:
                    type: string
                    minLength: 1
                  detail:
                    type: string
                    minLength: 1
                required:
                  - type
                  - title
                  - detail
                x-examples:
                  example-1:
                    type: string
                    title: string
                    detail: string
              examples:
                example-1:
                  value:
                    type: string
                    title: string
                    detail: string
      parameters:
        - schema:
            type: string
            maxLength: 1500
            minLength: 1
            example: Bearer <JWT>
          in: header
          name: Authorization
          description: Keycloak Issued token
        - schema:
            type: string
            format: uuid
            maxLength: 36
            pattern: '^[0-9a-f]{8}\b-[0-9a-f]{4}\b-[0-9a-f]{4}\b-[0-9a-f]{4}\b-[0-9a-f]{12}$'
            minLength: 36
          in: header
          name: clientId
          description: Keycloak Issued clientId
        - schema:
            type: string
            format: uuid
            maxLength: 36
            pattern: '^[0-9a-f]{8}\b-[0-9a-f]{4}\b-[0-9a-f]{4}\b-[0-9a-f]{4}\b-[0-9a-f]{12}$'
            minLength: 36
          in: header
          name: clientSecret
          description: Keycloak Issued clientSecret
      description: Listing user profile
      tags:
        - User APIs
    put:
      summary: 'Update User Profile [Role]'
      operationId: put-auth-v1-user-profile
      responses:
        '200':
          description: Successfully updating the user role.
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    type: string
                    title: string
                    results:
                      keycloakId: string
                      name: {}
                      roles: []
                      userId: string
                      email: string
                      clients:
                        - clientName: string
                          clientId: string
                properties:
                  type:
                    type: string
                    minLength: 1
                  title:
                    type: string
                    minLength: 1
                  results:
                    type: object
                    required:
                      - keycloakId
                      - name
                      - roles
                      - userId
                      - email
                      - clients
                    properties:
                      keycloakId:
                        type: string
                        minLength: 1
                      name:
                        type: object
                      roles:
                        type: array
                        items:
                          type: string
                      userId:
                        type: string
                        minLength: 1
                      email:
                        type: string
                        minLength: 1
                      clients:
                        type: array
                        uniqueItems: true
                        minItems: 1
                        items:
                          type: object
                          properties:
                            clientName:
                              type: string
                              minLength: 1
                            clientId:
                              type: string
                              minLength: 1
                          required:
                            - clientName
                            - clientId
                required:
                  - type
                  - title
                  - results
              examples:
                example-1:
                  value:
                    type: string
                    title: string
                    results:
                      keycloakId: string
                      name: {}
                      roles: []
                      userId: string
                      email: string
                      clients:
                        - clientName: string
                          clientId: string
      description: 'Update user profile [Roles].'
      parameters:
        - schema:
            type: string
            maxLength: 1500
            minLength: 1
            example: Bearer <JWT>
          in: header
          name: Authorization
          description: Keycloak Issued token
        - schema:
            type: string
            format: uuid
            maxLength: 36
            pattern: '^[0-9a-f]{8}\b-[0-9a-f]{4}\b-[0-9a-f]{4}\b-[0-9a-f]{4}\b-[0-9a-f]{12}$'
            minLength: 36
          in: header
          name: clientId
          description: Keycloak Issued clientId
        - schema:
            type: string
            format: uuid
            maxLength: 36
            pattern: '^[0-9a-f]{8}\b-[0-9a-f]{4}\b-[0-9a-f]{4}\b-[0-9a-f]{4}\b-[0-9a-f]{12}$'
            minLength: 36
          in: header
          name: clientSecret
          description: Keycloak Issued clientSecret
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  roles:
                    - provider
                    - consumer
                    - delegate
                  orgId: 123e4567-e89b-12d3-a456-426614174000
              properties:
                roles:
                  type: array
                  minItems: 1
                  maxItems: 4
                  uniqueItems: true
                  items:
                    type: string
                    enum:
                      - provider
                      - consumer
                      - delegate
                      - admin
                    minLength: 5
                    maxLength: 10
                orgId:
                  type: string
                  format: uuid
                  minLength: 36
                  maxLength: 36
                  pattern: '^[0-9a-f]{8}\b-[0-9a-f]{4}\b-[0-9a-f]{4}\b-[0-9a-f]{4}\b-[0-9a-f]{12}$'
              required:
                - roles
                - orgId
            examples:
              Update UserProfile:
                value:
                  roles:
                    - provider
                    - consumer
                    - delegate
                  orgId: 123e4567-e89b-12d3-a456-426614174000
        description: Updating role
      tags:
        - User APIs
components:
  schemas:
    RequestToken:
      description: Request payload for create token
      type: object
      properties:
        itemId:
          type: string
          minLength: 1
        itemType:
          type: string
          minLength: 1
        role:
          type: string
          minLength: 1
      required:
        - itemId
        - itemType
        - role
      title: RequestToken
    RevokeToken:
      description: ''
      type: object
      properties:
        clientId:
          type: string
          minLength: 1
        rsUrl:
          type: string
          minLength: 1
      required:
        - clientId
        - rsUrl
  securitySchemes: {}
security: []